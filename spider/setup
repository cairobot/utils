#!/bin/bash



# author:   $TM_FULLNAME
# file:     $TM_FILENAME
# version:  0.0.0-r0
# since:    
# desc:



SCRIPT_DIR=~

# This function uses echo to print a message to sdterr
# and returns 1
error() {
        echo "$@" 1>&2
        exit 1
}

# This function resolves a relative path into a absolute one.
# It depends on dirname and basename
resolvePath() {
        (
                cd "$(dirname "$1")"
                local fil="$(echo "$PWD/$(basename "$1")")"
                if [[ "$fil" =~ ^.*/\.$ ]]; then
                        fil="$(echo "$fil" | rev | cut -c 2- | rev)"
                fi
                echo "$fil"
        )
}

# This function resolves symbolic links and returns the absolute
# path to the original file.
# It depends on readlink
resolveFile() {
        local file="$1"
        while [[ -h "$file" ]]; do
                file="$(readlink "$file")"
        done
        echo "$file"
}

# Normalizes the given path and resolves all symbolic links.
# Depends on dirname, basename and readlink
normalize() {
        if [[ $# -ne 1 ]]; then
                error "Error: no file specified"
        fi
        if [[ ! -e "$1" ]]; then
                error "Error: no such file"
        fi

        if [[ -h "$1" ]]; then
                resolveFile "$1"
                return 0
        else
                resolvePath "$1"
                return 0
        fi
}

# Initialises all default values
init() {
        if [[ -f "$0" ]]; then
                SCRIPT_DIR="$(normalize "$(dirname "$0")")"
        fi
        if [[ "$SCRIPT_DIR" =~ ^.*/\.$ ]]; then
                SCRIPT_DIR="$(echo "$SCRIPT_DIR" | rev | cut -c 2- | rev)"
        fi
}

init_cd() {
        init
        cd "$SCRIPT_DIR"
}
main() {
        initd=1
        ifupd=0
        ifdownd=0
        init_cd

        for arg in $@; do
                case arg in
                        --without-initd)
                        -I)
                                initd=0
                        ;;
                        --with-ifupd)
                        -u)
                                ifupd=1
                        ;;
                        --with-ifdownd)
                        -d)
                                ifdownd=1
                        ;;
                esac

        done

        # install uart lib into main controller
        (
                cd uart
                ./configure
                make clean
                make deploy
                mv uart.tar.xz ../
        )
        tar -vxf uart.tar.xz
        rm uart.tar.xz
        if [ -e MainController/src/uart.py ]; then
                rm MainController/src/uart.py
        fi
        mv uart.py MainController/src/
        if [ ! -e MainController/src/lib/ ]; then
                mkdir MainController/src/lib/
        fi
        rm MainController/src/lib/*
        mv lib/* MainController/src/lib/
        rm -r lib/

        # install init.d scripts
        if [ $initd -eq 1 ]; then
                if [ -f onboard-scripts/deprecated/cairo-serverstart ]; then
                        data="$(cat onboard-scripts/deprecated/cairo-serverstart)"
                        data="$(echo "$data" | sed 's:__INSTALL_DIR__:'"$SCRIPT_DIR"':')"
                        echo "$data" > /etc/init.d/cairo-serverstart
                        chmod 755 /etc/init.d/cairo-serverstart
                fi
                systemctl enable cairo-serverstart
        fi

        if [ $ifupd -eq 1 ]; then
                if [ -f onboard-scripts/cairo-serverstart ]; then
                        data="$(cat onboard-scripts/cairo-serverstart)"
                        data="$(echo "$data" | sed 's:__INSTALL_DIR__:'"$SCRIPT_DIR"':')"
                        echo "$data" > /etc/network/if-up.d/cairo-serverstart
                        chmod 755 /etc/network/if-up.d/cairo-serverstart
                fi
        fi

        if [ $ifdownd -eq 1 ]; then
                if [ -f onboard-scripts/cairo-serverstop ]; then
                        data="$(cat onboard-scripts/cairo-serverstop)"
                        data="$(echo "$data" | sed 's:__INSTALL_DIR__:'"$SCRIPT_DIR"':')"
                        echo "$data" > /etc/network/if-down.d/cairo-serverstop
                        chmod 755 /etc/network/if-down.d/cairo-serverstop
                fi
        fi
        
}

main "$@"