#!/bin/sh


### BEGIN INIT INFO
# Provides:             cairo-serverstart
# Required-Start:       $all $ntp $network
# Required-Stop:        $all
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    Bootstraps cairo server
# Description:          DESC
### END INIT INFO


INST_DIR='__INSTALL_DIR__'
MC_DIR="$INST_DIR/bin/"
WALK_DIR="$INST_DIR/walkfiles/"
PYEXEC=main_controller.py
FIFO=/tmp/cairo-main_controller.fifo
INFILE=$FIFO
OUTFILE=/var/log/cairo-main_controller.log
ERRFILE=/var/log/cairo-main_controller.log
LOGFILE=$OUTFILE
DEVICE=/dev/ttyUSB0


get_pid() {
        ps -ax | grep python | grep -v grep | grep -m1 python\ main_controller.py | grep -o '^\s*[0-9]\+' | grep -o '[0-9]\+'
}

start() {
        # don't do anything if we are already running
        if [ ! -z $(get_pid) ]; then
                return
        fi

        # setup communication files
        cd "$MC_DIR"
        if [ ! -e $INFILE ]; then
                mkfifo $INFILE
        fi

        if [ -e $LOGFILE ]; then
                if [ -e $LOGFILE.1 ]; then
                        rm $LOGFILE.1
                fi
                mv $LOGFILE $LOGFILE.1
        fi
        touch $LOGFILE

        # do run
        python "$PYEXEC" -p 11111 -d $DEVICE -w "$WALK_DIR" & 2>&1 1>/dev/null
}

stop() {
        if [ -z $(get_pid) ]; then
                return
        fi
}

restart() {
        start
        stop
}

status() {
        pid=$(get_pid)
        if [ -z $pid ]; then
                echo 'not running'
        else
                echo 'running with pid: '"$pid"
        fi
}

case "$1" in 
        start)   start   ;;
        stop)    stop    ;;
        restart) restart ;;
        status)  status  ;;
esac
